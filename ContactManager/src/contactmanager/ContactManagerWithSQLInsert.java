/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package contactmanager;
import java.sql.*;
import javax.swing.JOptionPane;
import org.apache.derby.jdbc.*;

/**
 *
 * @author tduffy
 */
public class ContactManagerWithSQLInsert extends javax.swing.JFrame {
    private Connection con;
    private ResultSet rs;
    private Statement stmt;
    private final String dbURI = "jdbc:derby:contact;create=true";

    /**
     * Creates new form ContactManager
     */
    public ContactManagerWithSQLInsert() {
        initComponents();
        setDBSystemDir();
        createDBTable();
        getResultSet();
        displayResults();
    }
    
    private void setDBSystemDir() {
        // Decide on the db system directory: <userhome>/contact/
        String userHomeDir = System.getProperty("user.home", ".");
        String systemDir = userHomeDir + "/contact";

        // Set the db system directory.
        System.setProperty("derby.system.home", systemDir);
    }
    
    private void createDBTable(){
        try {
            DriverManager.registerDriver(new EmbeddedDriver());
            con = DriverManager.getConnection(dbURI);
            String sql = "create table contact (name varchar(30), email varchar(30), phone varchar(30))";
            stmt = con.createStatement();
            stmt.execute(sql);
        } catch (SQLException ex) {
            if(ex.getErrorCode()!=30000){
                //Error Code 30000: Table already exists - not an error!
                JOptionPane.showMessageDialog(this,ex.getMessage());
            }
        }
    }
    
    private void getResultSet(){
        try {
            stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rs = stmt.executeQuery("select * from contact");
            //ResultSet is scrollable and updatable
            rs.first();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
    }
    
    private void displayResults(){
        try{
            txtName.setText(rs.getString("name"));
            txtEmail.setText(rs.getString("email"));
            txtPhone.setText(rs.getString("phone"));
        }catch(SQLException ex){
            if(ex.getErrorCode()==20000){
                //Invalid Cursor State - no records in ResultSet
                JOptionPane.showMessageDialog(this,"Click New Record to get started");
                //In case the only record was deleted...
                txtName.setText("");
                txtEmail.setText("");
                txtPhone.setText("");
            }
            else
                JOptionPane.showMessageDialog(this,ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        btnFirst = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Contact Manager");

        jLabel1.setText("Name");

        jLabel2.setText("E-Mail");

        jLabel3.setText("Phone");

        btnFirst.setText("<<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrevious.setText("<");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnNext.setText(">");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setText(">>");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnNew.setText("New Record");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnUpdate.setText("Save Changes");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete record");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(6, 6, 6)
                .add(jLabel1)
                .add(18, 18, 18)
                .add(txtName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 334, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(layout.createSequentialGroup()
                .add(7, 7, 7)
                .add(jLabel2)
                .add(12, 12, 12)
                .add(txtEmail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 334, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(layout.createSequentialGroup()
                .add(6, 6, 6)
                .add(jLabel3)
                .add(16, 16, 16)
                .add(txtPhone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 334, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(layout.createSequentialGroup()
                .add(70, 70, 70)
                .add(btnFirst)
                .add(5, 5, 5)
                .add(btnPrevious)
                .add(5, 5, 5)
                .add(btnNext)
                .add(5, 5, 5)
                .add(btnLast))
            .add(layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(btnNew)
                .add(2, 2, 2)
                .add(btnUpdate)
                .add(0, 0, 0)
                .add(btnDelete))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(6, 6, 6)
                        .add(jLabel1))
                    .add(txtName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(12, 12, 12)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(6, 6, 6)
                        .add(jLabel2))
                    .add(txtEmail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(12, 12, 12)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(6, 6, 6)
                        .add(jLabel3))
                    .add(txtPhone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(22, 22, 22)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btnFirst)
                    .add(btnPrevious)
                    .add(btnNext)
                    .add(btnLast))
                .add(31, 31, 31)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btnNew)
                    .add(btnUpdate)
                    .add(btnDelete)))
        );

        setSize(new java.awt.Dimension(400, 285));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        try{
            rs.first();
            displayResults();
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        try{
            if(rs.previous()){
                displayResults();
            }else{
                rs.first();
                displayResults();
            }
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        try{
            if(rs.next()){
                displayResults();
            }else{
                rs.last();
                displayResults();
            }
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        try{
            rs.last();
            displayResults();
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try{
            rs.updateString("name", txtName.getText());
            rs.updateString("email", txtEmail.getText());
            rs.updateString("phone", txtPhone.getText());
            rs.updateRow();
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try{
            int dialogResult = JOptionPane.showConfirmDialog(this, "Delete Record?", "Warning",JOptionPane.YES_NO_OPTION);
            if(dialogResult==0){
                int currentRow = rs.getRow() - 1;
                if(currentRow == 0)
                    currentRow = 1;
                rs.deleteRow();
                rs.close();
                rs = stmt.executeQuery("select * from contact");
                rs.absolute(currentRow);
                displayResults();
                
            }
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        
        try {
            String name = JOptionPane.showInputDialog("Name: ");
            String email = JOptionPane.showInputDialog("E-Mail: ");
            String phone = JOptionPane.showInputDialog("Phone: ");
            stmt.executeUpdate("insert into contact values('" + name + "','" + email + "','" + phone + "')");
            rs = stmt.executeQuery("select * from contact");
            rs.last();
            displayResults();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
        
        
    }//GEN-LAST:event_btnNewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContactManagerWithSQLInsert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContactManagerWithSQLInsert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContactManagerWithSQLInsert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContactManagerWithSQLInsert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContactManagerWithSQLInsert().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
